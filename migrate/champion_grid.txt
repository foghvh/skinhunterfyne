// skinhunter/ui/champion_grid.go
package ui

import (
	"fmt"
	"log"

	"skinhunter/data"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
)

// NewChampionGrid creates the scrollable grid of champions.
func NewChampionGrid(onChampionSelect func(champ data.ChampionSummary)) fyne.CanvasObject {
	contentArea := container.NewMax()
	loading := widget.NewProgressBarInfinite()
	contentArea.Add(container.NewCenter(loading))

	go func() {
		champions, err := data.FetchAllChampions()
		if err != nil {
			log.Printf("Error fetching champions: %v", err)
			errorLabel := widget.NewLabel(fmt.Sprintf("Error loading champions:\n%v", err))
			errorLabel.Wrapping = fyne.TextWrapWord
			contentArea.Objects = []fyne.CanvasObject{container.NewCenter(errorLabel)}
			contentArea.Refresh()
			return
		}

		grid := container.NewGridWithColumns(9)
		for _, champ := range champions {
			item := ChampionGridItem(champ, onChampionSelect)
			if item != nil {
				grid.Add(item)
			}
		}

		scrollContainer := container.NewScroll(grid)
		contentArea.Objects = []fyne.CanvasObject{scrollContainer}
		contentArea.Refresh()
		log.Println("Champion grid UI updated")
	}()

	return contentArea
}
